#
sparrow.build.version=$sparrow.label$

# Cycledendency Implementations.
cycledependency.ShutdownTimeCheckDependant = sparrow.etl.core.cycledependency.ShutdownTimeListener
cycledependency.EndCycleCheckDependant = sparrow.etl.core.cycledependency.EndCycleListener
cycledependency.ProcessTerminationCheckDependant = sparrow.etl.core.cycledependency.ProcessTerminationListener
cycledependency.CycleCountCheckDependant = sparrow.etl.core.cycledependency.CycleCountListener
cycledependency.SystemGCForcer = sparrow.etl.core.cycledependency.SystemGCForcer
cycledependency.StatsCollector = sparrow.etl.core.cycledependency.StatsCollector

# Resource Implementations
resources.DB=sparrow.etl.core.resource.DefaultDBSourceInitializer
resources.MQ=sparrow.etl.core.resource.JMSResourceInitializer
resources.JMS=sparrow.etl.core.resource.JMSResourceInitializer
resources.SMTP=sparrow.etl.core.resource.EmailResourceInitializer
resources.EMAIL=sparrow.etl.core.resource.EmailResourceInitializer
resources.FTP=sparrow.etl.core.resource.FTPResourceInitializer
resources.SCP=sparrow.etl.core.resource.SCPResourceInitializer
resources.SPRING=sparrow.etl.core.resource.SpringResourceInitializer
resources.EJB=sparrow.etl.core.resource.EJBResourceInitializer
resources.CONTEXT=sparrow.etl.core.resource.InitialContextInitializer
resources.OTHER=null

ftp.default=sparrow.etl.core.resource.SunFTPClientSession
ftp.sun=sparrow.etl.core.resource.SunFTPClientSession
ftp.secure=sparrow.etl.core.resource.SFTPClientSession

# Writer Implementations
writer.DB=sparrow.etl.impl.writer.DBDataWriter
writer.FILE=sparrow.etl.impl.writer.FileWriter
writer.TEST=sparrow.etl.impl.writer.DummyDataWriter
writer.JMS=sparrow.etl.impl.writer.MessageWriter
writer.MQ=sparrow.etl.impl.writer.MessageWriter
writer.ZIP=sparrow.etl.impl.writer.ZipWriter
writer.FTP=sparrow.etl.impl.writer.FTPWriter
writer.TAR=sparrow.etl.impl.writer.TarWriter
writer.EMAIL=sparrow.etl.impl.writer.EmailWriter
writer.FILE-UTIL=sparrow.etl.impl.writer.FileUtilWriter
writer.SCP=sparrow.etl.impl.writer.SCPWriter
writer.OTHER=null
writer.EXCEL=sparrow.etl.impl.writer.TemplateBasedWriter
writer.TEMPLATE=sparrow.etl.impl.writer.TemplateBasedWriter
writer.COND-EMAIL=sparrow.etl.impl.writer.ConditionalEmailWriter

# Writer event mapping
writer_event.DB=ALL;request
writer_event.FILE=request;request
writer_event.TEST=ALL;begin.app
writer_event.JMS=request;request
writer_event.MQ=request;request
writer_event.ZIP=begin.app,begin.cycle,end.cycle,end.app,end.process;end.app
writer_event.FTP=begin.app,begin.cycle,end.cycle,end.app,end.process;end.app
writer_event.TAR=begin.app,begin.cycle,end.cycle,end.app,end.process;end.app
writer_event.EMAIL=begin.app,begin.cycle,end.cycle,end.app,end.process;end.app
writer_event.FILE-UTIL=begin.app,begin.cycle,end.cycle,end.app,end.process;end.app
writer_event.SCP=begin.app,end.process,end.app;end.app
writer_event.OTHER=ALL;request
writer_event.EXCEL=ALL;request
writer_event.TEMPLATE=ALL;request
writer_event.COND-EMAIL=begin.app,begin.cycle,end.cycle,end.app,end.process;end.app

# Writer DEFAULT Singleton // Value doesn't matter for this props.
writer_singleton.ZIP=true
writer_singleton.FTP=true
writer_singleton.TAR=true
writer_singleton.EMAIL=true
writer_singleton.FILE-UTIL=true
writer_singleton.SCP=true
writer_singleton.COND-EMAIL=true
writer_singleton.EXCEL=true
writer_singleton.TEMPLATE=true

# Writer Extention
writer_extn.failall@batch/true/bpr/false=sparrow.etl.impl.writer.DBDataWriterSupportBatch
writer_extn.ignore@batch/true/bpr/false=sparrow.etl.impl.writer.DBDataWriterSupportBatch
writer_extn.ignore@batch/false/bpr/false=sparrow.etl.impl.writer.DBDataWriterSupportSelfCommit
writer_extn.failall@batch/false/bpr/false=sparrow.etl.impl.writer.DBDataWriterSupportAllorNone
writer_extn.failall@batch/true/bpr/true=sparrow.etl.impl.writer.DBDWDoubleBatchSupport
writer_extn.ignore@batch/true/bpr/true=sparrow.etl.impl.writer.DBDWDoubleBatchSupport
writer_extn.ignore@batch/false/bpr/true=sparrow.etl.impl.writer.DBDWSupportDBSelfCommit
writer_extn.failall@batch/false/bpr/true=sparrow.etl.impl.writer.DBDWDBSupportAllorNone

# Notifier Injection
notifier.watcher=sparrow.etl.core.notifier.WatcherNotifier

#Event Injection
event.exception=sparrow.etl.core.notifier.event.ExceptionEventEvaluator

# DataProvider Implementations
provider.DB = sparrow.etl.core.dao.provider.impl.DBDataProviderElement,sparrow.etl.core.dao.provider.impl.DBDataProviderImpl
provider.CSV = sparrow.etl.core.dao.provider.BaseDataProviderElement,sparrow.etl.core.dao.provider.impl.CSVDataProvider
provider.FILE = sparrow.etl.core.dao.provider.BaseDataProviderElement,sparrow.etl.core.dao.provider.impl.CSVDataProvider
provider.PROC = sparrow.etl.core.dao.provider.impl.DBDataProviderElement,sparrow.etl.impl.dao.ProceduralDataProvider

# Extractor Implementation
extractor.DEFAULT=sparrow.etl.impl.extractor.GenericDataExtractor
extractor.PROC=sparrow.etl.impl.extractor.DefaultDataExtractor
extractor.CSV=sparrow.etl.impl.extractor.csv.CSVDataExtractor
extractor.FILE=sparrow.etl.impl.extractor.csv.CSVDataExtractor
extractor.DB=sparrow.etl.impl.extractor.db.DBDataExtractor
extractor.VIRTUAL=sparrow.etl.impl.extractor.VirtualDataExtractor
extractor.MESSAGE=sparrow.etl.impl.extractor.jms.JMSDataExtractor
extractor.MQ=sparrow.etl.impl.extractor.jms.JMSDataExtractor
extractor.JMS=sparrow.etl.impl.extractor.jms.JMSDataExtractor

#Transfomer Implementation
transformer.DEFAULT=sparrow.etl.impl.transformer.DummyDataTransformer
transformer.TEST=sparrow.etl.impl.transformer.DummyDataTransformer
transformer.SCRIPTLET-MVEL=sparrow.etl.impl.transformer.MVELBasedDataTransformer
transformer.SCRIPT=sparrow.etl.impl.transformer.CustomScriptDataTransformer
transformer.TEMPLATE=sparrow.etl.impl.transformer.TemplateBasedTransformer

#Template Processors used by transformer.TEMPLATE
template.sparrow=sparrow.etl.impl.transformer.template.SpearTemplateProcessor
template.velocity=sparrow.etl.impl.transformer.template.VelocityTemplateProcessor

# Services Implementation
service.DB-SEMAPHORE=sparrow.etl.impl.services.DBSemaphoreService
service.FILE-SEMAPHORE=sparrow.etl.impl.services.FileBasedSemaphoreService


# CSV Data Provider - File Processor
fileprocessor.CSV=sparrow.etl.core.dao.provider.impl.CSVFileProcessor

#Load Banalancer Default policy Impl
lbpolicy.ROUND-ROBIN=sparrow.etl.impl.loadbalance.RoundRobinRequestAssignerPolicy
lbpolicy.SEQUENCE=sparrow.etl.impl.loadbalance.SequenceRequestAssignerPolicy

#JDBC
dbdialect.jdbc.oracle.thin=sparrow.etl.core.dao.dialect.OracleDBDialect
dbdialect.jdbc.jtds.sybase=sparrow.etl.core.dao.dialect.SybaseDBDialect
dbdialect.jdbc.sybase.Tds=sparrow.etl.core.dao.dialect.SybaseDBDialect
dbdialect.jdbc.microsoft.sqlserver=sparrow.etl.core.dao.dialect.MSSQLServerDBDialect
dbdialect.jdbc.sqlserver=sparrow.etl.core.dao.dialect.SybaseDBDialect
dbdialect.com.microsoft.jdbc=sparrow.etl.core.dao.dialect.MSSQLServerDBDialect
dbdialect.com.microsoft.sqlserver=sparrow.etl.core.dao.dialect.MSSQLServerDBDialect
dbdialect.com.microsoft.sqlserver.jdbc.SQLServerDriver=sparrow.etl.core.dao.dialect.MSSQLServerDBDialect
dbdialect.oracle.jdbc.driver=sparrow.etl.core.dao.dialect.OracleDBDialect
dbdialect.com.sybase=sparrow.etl.core.dao.dialect.SybaseDBDialect
dbdialect.oracle.jdbc.OracleDriver=sparrow.etl.core.dao.dialect.OracleDBDialect
dbdialect.com.sybase.jdbc.SybDriver=sparrow.etl.core.dao.dialect.SybaseDBDialect
dbdialect.com.sybase.jdbc2.jdbc.SybDriver=sparrow.etl.core.dao.dialect.SybaseDBDialect
dbdialect.com.sybase.jdbc3=sparrow.etl.core.dao.dialect.SybaseDBDialect
dbdialect.com.sybase.jdbc2=sparrow.etl.core.dao.dialect.SybaseDBDialect
dbdialect.com.microsoft.sqlserver.jdbc.SQLServerDriver=sparrow.etl.core.dao.dialect.MSSQLServerDBDialect

#Script Support
script.mvel=sparrow.etl.impl.script.MVELScriptEngine
script.java=sparrow.etl.impl.script.JaninoScriptEngine
script.java.cbe=sparrow.etl.impl.script.JaninoScriptEngineCBEImpl
script.xslt=sparrow.etl.impl.script.XSLTScriptEngine

import.1=sparrow.etl.core.dao.impl.RecordSet
import.2=sparrow.etl.core.exception.DataException
import.3=sparrow.etl.core.dao.impl.ResultRow
import.4=sparrow.etl.core.dao.impl.ResultRowImpl
import.5=sparrow.etl.core.dao.impl.DisconnectedRecordSet
import.6=sparrow.etl.core.dao.impl.ColumnHeader
import.7=sparrow.etl.core.dao.impl.RecordSetImpl_Disconnected

dml.tokens=SELECT ,INSERT ,DELETE ,TRUNCATE ,UPDATE ,BEGIN ,BEGIN\n,SELECT\n,SELECT\t,INSERT\t,DELETE\t,UPDATE\t,INSERT\n,DELETE\n,UPDATE\n,TRUNCATE\n,TRUNCATE\t,DROP\t,DROP\n,DROP ,CREATE ,CREATE\n,CREATE\t,ALTER ,ALTER\n,ALTER\t 


functions.func_substring=sparrow.etl.core.lang.function.SubstringFunction
functions.func_lcase=sparrow.etl.core.lang.function.LCaseFunction
functions.func_trim=sparrow.etl.core.lang.function.TrimFunction
functions.func_ucase=sparrow.etl.core.lang.function.UCaseFunction
functions.func_replace=sparrow.etl.core.lang.function.ReplaceFunction
functions.func_length=sparrow.etl.core.lang.function.LengthFunction
functions.func_lpad=sparrow.etl.core.lang.function.LPadFunction
functions.func_rpad=sparrow.etl.core.lang.function.RPadFunction
functions.func_nullval=sparrow.etl.core.lang.function.NullValFunction
functions.func_ternary=sparrow.etl.core.lang.function.TernaryFunction
functions.func_evaldouble=sparrow.etl.core.lang.function.EvalDoubleFunction
functions.func_eval=sparrow.etl.core.lang.function.EvalNumberFunction
functions.func_getdate=sparrow.etl.core.lang.function.DateFunction
functions.func_formatdate=sparrow.etl.core.lang.function.FormatDateFunction
functions.func_formatdecimal=sparrow.etl.core.lang.function.FormatDecimalFunction
functions.func_math=sparrow.etl.core.lang.function.MathFunction
functions.func_convertdouble=sparrow.etl.core.lang.function.ConvertToDoubleFunction
functions.func_convertnumber=sparrow.etl.core.lang.function.ConvertToNumberFunction
functions.func_indexof=sparrow.etl.core.lang.function.IndexOfFunction
functions.func_isnull=sparrow.etl.core.lang.function.IsNullFunction
functions.func_isnotnull=sparrow.etl.core.lang.function.IsNotNullFunction
functions.func_concatenate=sparrow.etl.core.lang.function.ConcatenateFunction
functions.func_isempty=sparrow.etl.core.lang.function.IsEmptyFunction
functions.func_getlocalhost=sparrow.etl.core.lang.function.LocalHostFunction
functions.func_converttostring=sparrow.etl.core.lang.function.ConvertToString
functions.func_adddate=sparrow.etl.core.lang.function.AddDateFunction
functions.func_filesize=sparrow.etl.core.lang.function.FileSizeFunction
functions.func_threadname=sparrow.etl.core.lang.function.ThreadInfoFunction
functions.func_enclose=sparrow.etl.core.lang.function.EncloseFunction
functions.func_isfileexist=sparrow.etl.core.lang.function.FileExistFunction

# Exception Handlers
handler.1.name=default.exception.handler
handler.1.class=sparrow.etl.core.exception.SpearExceptionHandler

# Handle Excetion for sparrow.etl.core.exception.InitializationException
handle.1.exception.class=sparrow.etl.core.exception.InitializationException
handle.1.hander.name=default.exception.handler
handle.1.error.1.code=MANDATORY_PARAM_MISSING
handle.1.error.1.desc=
handle.1.error.1.type=fatal
handle.1.error.2.code=*_INIT_EXP
handle.1.error.2.desc=
handle.1.error.2.type=fatal
handle.1.error.3.code=APP_INITIALIZATION_EXP
handle.1.error.3.desc=
handle.1.error.3.type=fatal

# Handle Excetion for sparrow.etl.core.exception.ResourceException
handle.2.exception.class=sparrow.etl.core.exception.ResourceException
handle.2.hander.name=default.exception.handler
handle.2.error.1.code=DB_DATASOURCE_CREATION
handle.2.error.1.desc=
handle.2.error.1.type=fatal
handle.2.error.2.code=*_EXCEPTION_CON
handle.2.error.2.desc=
handle.2.error.2.type=fatal
handle.2.error.3.code=DB_BATCH_NOT_SUPPORT
handle.2.error.3.desc=
handle.2.error.3.type=fatal
handle.2.error.4.code=*_INIT_EXP
handle.2.error.4.desc=
handle.2.error.4.type=fatal
handle.2.error.5.code=*
handle.2.error.5.desc=
handle.2.error.5.type=fatal
# Handle Excetion for sparrow.etl.core.exception.ResourceException
handle.3.exception.class=sparrow.etl.core.exception.EventNotifierException
handle.3.hander.name=default.exception.handler
handle.3.error.1.code=JMS_INIT_BEGIN_APP_JMS_EXP
handle.3.error.1.desc=
handle.3.error.1.type=fatal
handle.3.error.2.code=JMS_INIT_BEGIN_APP_EXP
handle.3.error.2.desc=
handle.3.error.2.type=fatal
#****************************************************************
handle.4.exception.class=sparrow.etl.core.exception.ParserException
handle.4.hander.name=default.exception.handler
handle.4.error.1.code=*
handle.4.error.1.desc=
handle.4.error.1.type=fatal
#****************************************************************
handle.5.exception.class=java.sql.SQLException
handle.5.hander.name=default.exception.handler
handle.5.error.1.code=9*
handle.5.error.1.desc=
handle.5.error.1.type=fatal
#****************************************************************
handle.6.exception.class=sparrow.etl.core.exception.SemaphoreException
handle.6.hander.name=default.exception.handler
handle.6.error.1.code=SEMAPHORE_BA_LOCKED
handle.6.error.1.desc=
handle.6.error.1.type=fatal
handle.6.error.2.code=SEMAPHORE_UNKNOWN
handle.6.error.2.desc=
handle.6.error.2.type=fatal
handle.6.error.3.code=SEMAPHORE_BA_PROVIDER_NOT_FOUND
handle.6.error.3.desc=
handle.6.error.3.type=fatal
