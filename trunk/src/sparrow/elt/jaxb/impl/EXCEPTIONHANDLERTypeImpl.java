//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vBeta 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.12.18 at 05:29:09 SGT 
//


package sparrow.elt.jaxb.impl;

public class EXCEPTIONHANDLERTypeImpl implements sparrow.elt.jaxb.EXCEPTIONHANDLERType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
{

    private final static Class PRIMARY_INTERFACE_CLASS = sparrow.elt.jaxb.EXCEPTIONHANDLERType.class;
    protected java.util.ArrayList _HANDLE = new java.util.ArrayList();
    protected java.util.ArrayList _HANDLER = new java.util.ArrayList();
    private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0000)\u0018\u0016ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u0014\u008c\u000eppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u0014\u008c\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u0014\u008c\u0000q\u0000~\u0000\fp\u0000sq\u0000~\u0000\r\u0000\u0014\u008b\u00f5pp\u0000sq\u0000~\u0000\u0006\u0000\u0014\u008b\u00eappsq\u0000~\u0000\b\u0000\u0014\u008b\u00dfq\u0000~\u0000\fpsr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000exq\u0000~\u0000\u0003\u0000\u0014\u008b\u00dcq\u0000~\u0000\fpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u000b\u0001psr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0018psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000~\u0000\u001at\u0000 sparrow.elt.jaxb.HANDLERTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001et\u0000\u0007HANDLERt\u0000\u0000q\u0000~\u0000\u001dsq\u0000~\u0000\b\u0000\u0014\u008c\u0003ppsq\u0000~\u0000\r\u0000\u0014\u008c\u0000pp\u0000sq\u0000~\u0000\r\u0000\u0014\u008b\u00f5pp\u0000sq\u0000~\u0000\u0006\u0000\u0014\u008b\u00eappsq\u0000~\u0000\b\u0000\u0014\u008b\u00dfq\u0000~\u0000\fpsq\u0000~\u0000\u0014\u0000\u0014\u008b\u00dcq\u0000~\u0000\fpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u001fcom.cs.sg.spear.jaxb.HANDLETypeq\u0000~\u0000\"sq\u0000~\u0000\u001et\u0000\u0006HANDLEq\u0000~\u0000%sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u00001[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\b\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppppppq\u0000~\u0000\nq\u0000~\u0000&pppppppppq\u0000~\u0000\u0007pppppppppppppppppq\u0000~\u0000\u0005pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0013q\u0000~\u0000*pppppppppq\u0000~\u0000\u0012q\u0000~\u0000)pppppppppp");

    public java.util.List getHANDLE() {
        return _HANDLE;
    }

    public java.util.List getHANDLER() {
        return _HANDLER;
    }

    public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
        return new sparrow.elt.jaxb.impl.EXCEPTIONHANDLERTypeImpl.Unmarshaller(context);
    }

    public Class getPrimaryInterfaceClass() {
        return PRIMARY_INTERFACE_CLASS;
    }

    public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _HANDLE.size();
        int idx2 = 0;
        final int len2 = _HANDLER.size();
        while (idx2 != len2) {
            context.startElement("", "HANDLER");
            int idx_0 = idx2;
            context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _HANDLER.get(idx_0 ++)));
            context.endAttributes();
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _HANDLER.get(idx2 ++)));
            context.endElement();
        }
        while (idx1 != len1) {
            context.startElement("", "HANDLE");
            int idx_1 = idx1;
            context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _HANDLE.get(idx_1 ++)));
            context.endAttributes();
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _HANDLE.get(idx1 ++)));
            context.endElement();
        }
    }

    public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _HANDLE.size();
        int idx2 = 0;
        final int len2 = _HANDLER.size();
    }

    public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _HANDLE.size();
        int idx2 = 0;
        final int len2 = _HANDLER.size();
    }

    public Class getPrimaryInterface() {
        return (sparrow.elt.jaxb.EXCEPTIONHANDLERType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
    {


        public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
            super(context, "------");
        }

        protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
            return sparrow.elt.jaxb.impl.EXCEPTIONHANDLERTypeImpl.this;
        }

        public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  3 :
                    if ("".equals(___uri)&&"ERROR".equals(___local)) {
                        _HANDLE.add(((sparrow.elt.jaxb.impl.HANDLETypeImpl) spawnChildFromEnterElement((sparrow.elt.jaxb.impl.HANDLETypeImpl.class), 4, ___uri, ___local, __atts)));
                        return ;
                    }
                    break;
                case  5 :
                    if ("".equals(___uri)&&"HANDLE".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 3;
                        return ;
                    }
                    revertToParentFromEnterElement(___uri, ___local, __atts);
                    return ;
                case  0 :
                    if ("".equals(___uri)&&"HANDLER".equals(___local)) {
                        context.pushAttributes(__atts);
                        goto1();
                        return ;
                    }
                    if ("".equals(___uri)&&"HANDLE".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 3;
                        return ;
                    }
                    break;
            }
            super.enterElement(___uri, ___local, __atts);
        }

        public void leaveElement(String ___uri, String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  4 :
                    if ("".equals(___uri)&&"HANDLE".equals(___local)) {
                        context.popAttributes();
                        state = 5;
                        return ;
                    }
                    break;
                case  5 :
                    revertToParentFromLeaveElement(___uri, ___local);
                    return ;
                case  2 :
                    if ("".equals(___uri)&&"HANDLER".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
            }
            super.leaveElement(___uri, ___local);
        }

        public void enterAttribute(String ___uri, String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  1 :
                    if ("".equals(___uri)&&"CLASS".equals(___local)) {
                        _HANDLER.add(((sparrow.elt.jaxb.impl.HANDLERTypeImpl) spawnChildFromEnterAttribute((sparrow.elt.jaxb.impl.HANDLERTypeImpl.class), 2, ___uri, ___local)));
                        return ;
                    }
                    if ("".equals(___uri)&&"NAME".equals(___local)) {
                        _HANDLER.add(((sparrow.elt.jaxb.impl.HANDLERTypeImpl) spawnChildFromEnterAttribute((sparrow.elt.jaxb.impl.HANDLERTypeImpl.class), 2, ___uri, ___local)));
                        return ;
                    }
                    break;
                case  5 :
                    revertToParentFromEnterAttribute(___uri, ___local);
                    return ;
            }
            super.enterAttribute(___uri, ___local);
        }

        public void leaveAttribute(String ___uri, String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  5 :
                    revertToParentFromLeaveAttribute(___uri, ___local);
                    return ;
            }
            super.leaveAttribute(___uri, ___local);
        }

        public void text(String value)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            try {
                switch (state) {
                    case  5 :
                        revertToParentFromText(value);
                        return ;
                }
            } catch (RuntimeException e) {
                handleUnexpectedTextException(value, e);
            }
        }

        public void leaveChild(int nextState)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (nextState) {
                case  4 :
                    state = 4;
                    return ;
                case  2 :
                    state = 2;
                    return ;
            }
            super.leaveChild(nextState);
        }

        private void goto1()
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            int idx;
            state = 1;
            idx = context.getAttribute("", "CLASS");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
            idx = context.getAttribute("", "NAME");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
        }

    }

}
