//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vBeta 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.09.06 at 11:48:43 SGT 
//


package sparrow.elt.jaxb.impl;

public class MODULETypeImpl implements sparrow.elt.jaxb.MODULEType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
{

    private final static Class PRIMARY_INTERFACE_CLASS = sparrow.elt.jaxb.MODULEType.class;
    protected sparrow.elt.jaxb.MODULEPARAMType _MODULEPARAM;
    protected String _PROCESSID;
    protected sparrow.elt.jaxb.LOADBALANCEType _LOADBALANCE;
    protected String _NAME;
    protected String _DESCRIPTION;
    protected sparrow.elt.jaxb.CYCLEDEPENDENCIESype _CYCLEDEPENDENCIES;
    private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0002\u000b\u00c0\\ppsq\u0000~\u0000\u0000\u0001h\u00a2\u0004ppsq\u0000~\u0000\u0000\u0000\u00c5\u0083\u00acppsq\u0000~\u0000\u0000\u0000\"eTppsq\u0000~\u0000\u0000\u0000\u0016\u00ee/ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u000bw\u0015pp\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u000bw\nppsr\u0000#com.sun.msv.datatype.xsd.StringType\u00c0\t\u00a9y\u00f6\u0011\u009b\u00e6\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0016L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0016L\u0000\fnamespaceURIq\u0000~\u0000\u0016xpq\u0000~\u0000\u001aq\u0000~\u0000\u0019sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0016L\u0000\fnamespaceURIq\u0000~\u0000\u0016xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\u0004NAMEt\u0000\u0000sq\u0000~\u0000\n\u0000\u000bw\u0015pp\u0000q\u0000~\u0000\u0011sq\u0000~\u0000$t\u0000\nPROCESS-IDq\u0000~\u0000(sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u000bw ppsq\u0000~\u0000\n\u0000\u000bw\u0015q\u0000~\u0000!p\u0000q\u0000~\u0000\u0011sq\u0000~\u0000$t\u0000\u000bDESCRIPTIONq\u0000~\u0000(sr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000 \u0001psq\u0000~\u0000,\u0000\u00a3\u001eSppsq\u0000~\u0000\n\u0000\u00a3\u001eHq\u0000~\u0000!p\u0000sq\u0000~\u0000\n\u0000\u00a3\u001e=pp\u0000sq\u0000~\u0000,\u0000\u00a3\u001e2ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a3\u001e\'q\u0000~\u0000!psr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bxq\u0000~\u0000\u0003\u0000\u00a3\u001e$q\u0000~\u0000!psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~\u00003psr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xq\u0000~\u0000%q\u0000~\u00002sq\u0000~\u0000$t\u0000$sparrow.elt.jaxb.LOADBALANCETypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000$t\u0000\fLOAD-BALANCEq\u0000~\u0000(q\u0000~\u00002sq\u0000~\u0000,\u0000\u00a3\u001eSppsq\u0000~\u0000\n\u0000\u00a3\u001eHq\u0000~\u0000!p\u0000sq\u0000~\u0000\n\u0000\u00a3\u001e=pp\u0000sq\u0000~\u0000,\u0000\u00a3\u001e2ppsq\u0000~\u00008\u0000\u00a3\u001e\'q\u0000~\u0000!psq\u0000~\u0000;\u0000\u00a3\u001e$q\u0000~\u0000!pq\u0000~\u0000>q\u0000~\u0000@q\u0000~\u00002sq\u0000~\u0000$t\u0000)sparrow.elt.jaxb.CYCLEDEPENDENCIESypeq\u0000~\u0000Csq\u0000~\u0000$t\u0000\u0012CYCLE-DEPENDENCIESq\u0000~\u0000(q\u0000~\u00002sq\u0000~\u0000,\u0000\u00a3\u001eSppsq\u0000~\u0000\n\u0000\u00a3\u001eHq\u0000~\u0000!p\u0000sq\u0000~\u0000\n\u0000\u00a3\u001e=pp\u0000sq\u0000~\u0000,\u0000\u00a3\u001e2ppsq\u0000~\u00008\u0000\u00a3\u001e\'q\u0000~\u0000!psq\u0000~\u0000;\u0000\u00a3\u001e$q\u0000~\u0000!pq\u0000~\u0000>q\u0000~\u0000@q\u0000~\u00002sq\u0000~\u0000$t\u0000$sparrow.elt.jaxb.MODULEPARAMTypeq\u0000~\u0000Csq\u0000~\u0000$t\u0000\fMODULE-PARAMq\u0000~\u0000(q\u0000~\u00002sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000[[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u000f\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppq\u0000~\u0000:q\u0000~\u0000Jq\u0000~\u0000Tppppppppq\u0000~\u00007q\u0000~\u0000Iq\u0000~\u0000Spppppppppppppppppq\u0000~\u0000\u0007ppppppppppppq\u0000~\u00004q\u0000~\u0000Fq\u0000~\u0000Ppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0006ppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005ppppppppppppppppq\u0000~\u0000\tppq\u0000~\u0000\bpppppppppppppppq\u0000~\u0000-p");

    public sparrow.elt.jaxb.MODULEPARAMType getMODULEPARAM() {
        return _MODULEPARAM;
    }

    public void setMODULEPARAM(sparrow.elt.jaxb.MODULEPARAMType value) {
        _MODULEPARAM = value;
    }

    public String getPROCESSID() {
        return _PROCESSID;
    }

    public void setPROCESSID(String value) {
        _PROCESSID = value;
    }

    public sparrow.elt.jaxb.LOADBALANCEType getLOADBALANCE() {
        return _LOADBALANCE;
    }

    public void setLOADBALANCE(sparrow.elt.jaxb.LOADBALANCEType value) {
        _LOADBALANCE = value;
    }

    public String getNAME() {
        return _NAME;
    }

    public void setNAME(String value) {
        _NAME = value;
    }

    public String getDESCRIPTION() {
        return _DESCRIPTION;
    }

    public void setDESCRIPTION(String value) {
        _DESCRIPTION = value;
    }

    public sparrow.elt.jaxb.CYCLEDEPENDENCIESype getCYCLEDEPENDENCIES() {
        return _CYCLEDEPENDENCIES;
    }

    public void setCYCLEDEPENDENCIES(sparrow.elt.jaxb.CYCLEDEPENDENCIESype value) {
        _CYCLEDEPENDENCIES = value;
    }

    public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
        return new sparrow.elt.jaxb.impl.MODULETypeImpl.Unmarshaller(context);
    }

    public Class getPrimaryInterfaceClass() {
        return PRIMARY_INTERFACE_CLASS;
    }

    public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("", "NAME");
        context.endAttributes();
        context.text(((String) _NAME));
        context.endElement();
        context.startElement("", "PROCESS-ID");
        context.endAttributes();
        context.text(((String) _PROCESSID));
        context.endElement();
        if (_DESCRIPTION!= null) {
            context.startElement("", "DESCRIPTION");
            context.endAttributes();
            context.text(((String) _DESCRIPTION));
            context.endElement();
        }
        if (_LOADBALANCE!= null) {
            context.startElement("", "LOAD-BALANCE");
            context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _LOADBALANCE));
            context.endAttributes();
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _LOADBALANCE));
            context.endElement();
        }
        if (_CYCLEDEPENDENCIES!= null) {
            context.startElement("", "CYCLE-DEPENDENCIES");
            context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _CYCLEDEPENDENCIES));
            context.endAttributes();
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _CYCLEDEPENDENCIES));
            context.endElement();
        }
        if (_MODULEPARAM!= null) {
            context.startElement("", "MODULE-PARAM");
            context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _MODULEPARAM));
            context.endAttributes();
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _MODULEPARAM));
            context.endElement();
        }
    }

    public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public Class getPrimaryInterface() {
        return (sparrow.elt.jaxb.MODULEType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
    {


        public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
            super(context, "---------------");
        }

        protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
            return sparrow.elt.jaxb.impl.MODULETypeImpl.this;
        }

        public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  7 :
                    if ("".equals(___uri)&&"PARAM".equals(___local)) {
                        _MODULEPARAM = ((sparrow.elt.jaxb.impl.MODULEPARAMTypeImpl) spawnChildFromEnterElement((sparrow.elt.jaxb.impl.MODULEPARAMTypeImpl.class), 8, ___uri, ___local, __atts));
                        return ;
                    }
                    break;
                case  3 :
                    if ("".equals(___uri)&&"PROCESS-ID".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 4;
                        return ;
                    }
                    break;
                case  9 :
                    if ("".equals(___uri)&&"PARAM".equals(___local)) {
                        _LOADBALANCE = ((sparrow.elt.jaxb.impl.LOADBALANCETypeImpl) spawnChildFromEnterElement((sparrow.elt.jaxb.impl.LOADBALANCETypeImpl.class), 10, ___uri, ___local, __atts));
                        return ;
                    }
                    break;
                case  0 :
                    if ("".equals(___uri)&&"NAME".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 1;
                        return ;
                    }
                    break;
                case  6 :
                    if ("".equals(___uri)&&"DESCRIPTION".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 13;
                        return ;
                    }
                    if ("".equals(___uri)&&"CYCLE-DEPENDENCIES".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 11;
                        return ;
                    }
                    if ("".equals(___uri)&&"MODULE-PARAM".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 7;
                        return ;
                    }
                    if ("".equals(___uri)&&"LOAD-BALANCE".equals(___local)) {
                        context.pushAttributes(__atts);
                        goto9();
                        return ;
                    }
                    revertToParentFromEnterElement(___uri, ___local, __atts);
                    return ;
                case  11 :
                    if ("".equals(___uri)&&"ASSERTER".equals(___local)) {
                        _CYCLEDEPENDENCIES = ((sparrow.elt.jaxb.impl.CYCLEDEPENDENCIESypeImpl) spawnChildFromEnterElement((sparrow.elt.jaxb.impl.CYCLEDEPENDENCIESypeImpl.class), 12, ___uri, ___local, __atts));
                        return ;
                    }
                    break;
            }
            super.enterElement(___uri, ___local, __atts);
        }

        public void leaveElement(String ___uri, String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  8 :
                    if ("".equals(___uri)&&"MODULE-PARAM".equals(___local)) {
                        context.popAttributes();
                        state = 6;
                        return ;
                    }
                    break;
                case  2 :
                    if ("".equals(___uri)&&"NAME".equals(___local)) {
                        context.popAttributes();
                        state = 3;
                        return ;
                    }
                    break;
                case  5 :
                    if ("".equals(___uri)&&"PROCESS-ID".equals(___local)) {
                        context.popAttributes();
                        state = 6;
                        return ;
                    }
                    break;
                case  14 :
                    if ("".equals(___uri)&&"DESCRIPTION".equals(___local)) {
                        context.popAttributes();
                        state = 6;
                        return ;
                    }
                    break;
                case  7 :
                    if ("".equals(___uri)&&"MODULE-PARAM".equals(___local)) {
                        _MODULEPARAM = ((sparrow.elt.jaxb.impl.MODULEPARAMTypeImpl) spawnChildFromLeaveElement((sparrow.elt.jaxb.impl.MODULEPARAMTypeImpl.class), 8, ___uri, ___local));
                        return ;
                    }
                    break;
                case  12 :
                    if ("".equals(___uri)&&"CYCLE-DEPENDENCIES".equals(___local)) {
                        context.popAttributes();
                        state = 6;
                        return ;
                    }
                    break;
                case  6 :
                    revertToParentFromLeaveElement(___uri, ___local);
                    return ;
                case  10 :
                    if ("".equals(___uri)&&"LOAD-BALANCE".equals(___local)) {
                        context.popAttributes();
                        state = 6;
                        return ;
                    }
                    break;
            }
            super.leaveElement(___uri, ___local);
        }

        public void enterAttribute(String ___uri, String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  9 :
                    if ("".equals(___uri)&&"CLASS".equals(___local)) {
                        _LOADBALANCE = ((sparrow.elt.jaxb.impl.LOADBALANCETypeImpl) spawnChildFromEnterAttribute((sparrow.elt.jaxb.impl.LOADBALANCETypeImpl.class), 10, ___uri, ___local));
                        return ;
                    }
                    if ("".equals(___uri)&&"POLICY".equals(___local)) {
                        _LOADBALANCE = ((sparrow.elt.jaxb.impl.LOADBALANCETypeImpl) spawnChildFromEnterAttribute((sparrow.elt.jaxb.impl.LOADBALANCETypeImpl.class), 10, ___uri, ___local));
                        return ;
                    }
                    break;
                case  6 :
                    revertToParentFromEnterAttribute(___uri, ___local);
                    return ;
            }
            super.enterAttribute(___uri, ___local);
        }

        public void leaveAttribute(String ___uri, String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  6 :
                    revertToParentFromLeaveAttribute(___uri, ___local);
                    return ;
            }
            super.leaveAttribute(___uri, ___local);
        }

        public void text(String value)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            try {
                switch (state) {
                    case  13 :
                        _DESCRIPTION = value;
                        state = 14;
                        return ;
                    case  1 :
                        _NAME = value;
                        state = 2;
                        return ;
                    case  6 :
                        revertToParentFromText(value);
                        return ;
                    case  4 :
                        _PROCESSID = value;
                        state = 5;
                        return ;
                }
            } catch (RuntimeException e) {
                handleUnexpectedTextException(value, e);
            }
        }

        public void leaveChild(int nextState)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (nextState) {
                case  8 :
                    state = 8;
                    return ;
                case  12 :
                    state = 12;
                    return ;
                case  10 :
                    state = 10;
                    return ;
            }
            super.leaveChild(nextState);
        }

        private void goto9()
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            int idx;
            state = 9;
            idx = context.getAttribute("", "POLICY");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
            idx = context.getAttribute("", "CLASS");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
        }

    }

}
