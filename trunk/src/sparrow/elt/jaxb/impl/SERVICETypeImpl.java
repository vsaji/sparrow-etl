//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vBeta 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.08.09 at 01:18:57 SGT 
//


package sparrow.elt.jaxb.impl;

public class SERVICETypeImpl implements sparrow.elt.jaxb.SERVICEType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
{

    private final static Class PRIMARY_INTERFACE_CLASS = sparrow.elt.jaxb.SERVICEType.class;
    protected String _TYPE;
    protected java.util.ArrayList _PARAM = new java.util.ArrayList();
    protected String _CLASS;
    protected boolean has_CYCLENOTIFICATION;
    protected boolean _CYCLENOTIFICATION;
    protected String _NAME;
    protected boolean has_APPNOTIFICATION;
    protected boolean _APPNOTIFICATION;
    protected String _DEPENDS;
    private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\b\u0094;~ppsq\u0000~\u0000\u0000\u0007\u00ce\u00ccjppsq\u0000~\u0000\u0000\u0006\u00ba.\u00f0ppsq\u0000~\u0000\u0000\u0004\u00f1@\u000eppsq\u0000~\u0000\u0000\u0003\u00c2k\u00c8ppsq\u0000~\u0000\u0000\u0002\u001f>Qppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u00a3\u001eVppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a3\u001eKsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a3\u001eHq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0012\u0000\u00a3\u001e=pp\u0000sq\u0000~\u0000\u000b\u0000\u00a3\u001e2ppsq\u0000~\u0000\r\u0000\u00a3\u001e\'q\u0000~\u0000\u0011psr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0013xq\u0000~\u0000\u0003\u0000\u00a3\u001e$q\u0000~\u0000\u0011psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u0010\u0001psr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u001dpsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000$xq\u0000~\u0000\u001ft\u0000\u001ecom.cs.sg.spear.jaxb.PARAMTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000#t\u0000\u0005PARAMt\u0000\u0000q\u0000~\u0000\"sq\u0000~\u0000\u000b\u0001|\u001f\u00f6ppsq\u0000~\u0000\u0019\u0001|\u001f\u00ebq\u0000~\u0000\u0011psr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001\n\u00b33ppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u008f\u0081\u0081\u0090\u00c8\u0002}\u0099\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000$L\u0000\btypeNameq\u0000~\u0000$L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007booleansr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u0011psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000$L\u0000\fnamespaceURIq\u0000~\u0000$xpq\u0000~\u00008q\u0000~\u00007sq\u0000~\u0000#t\u0000\u0010APP-NOTIFICATIONq\u0000~\u0000*q\u0000~\u0000\"sq\u0000~\u0000\u000b\u0001\u00a3-rppsq\u0000~\u0000\u0019\u0001\u00a3-gq\u0000~\u0000\u0011pq\u0000~\u00000sq\u0000~\u0000#t\u0000\u0012CYCLE-NOTIFICATIONq\u0000~\u0000*q\u0000~\u0000\"sq\u0000~\u0000\u000b\u0001.\u00d4Appsq\u0000~\u0000\u0019\u0001.\u00d46q\u0000~\u0000\u0011psq\u0000~\u0000-\u0000\u00b0\u001dSppsr\u0000#com.sun.msv.datatype.xsd.StringType\u00c0\t\u00a9y\u00f6\u0011\u009b\u00e6\u0002\u0000\u0000xq\u0000~\u00002q\u0000~\u00007t\u0000\u0006stringsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xq\u0000~\u0000:q\u0000~\u0000=sq\u0000~\u0000>q\u0000~\u0000Kq\u0000~\u00007sq\u0000~\u0000#t\u0000\u0007DEPENDSq\u0000~\u0000*q\u0000~\u0000\"sq\u0000~\u0000\u0019\u0001\u00c8\u00ee\u00ddppq\u0000~\u0000Hsq\u0000~\u0000#t\u0000\u0004NAMEq\u0000~\u0000*sq\u0000~\u0000\u000b\u0001\u0014\u009duppsq\u0000~\u0000\u0019\u0001\u0014\u009djq\u0000~\u0000\u0011pq\u0000~\u0000Hsq\u0000~\u0000#t\u0000\u0004TYPEq\u0000~\u0000*q\u0000~\u0000\"sq\u0000~\u0000\u000b\u0000\u00c5o\u000fppsq\u0000~\u0000\u0019\u0000\u00c5o\u0004q\u0000~\u0000\u0011pq\u0000~\u0000Hsq\u0000~\u0000#t\u0000\u0005CLASSq\u0000~\u0000*q\u0000~\u0000\"sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000][\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u000f\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppq\u0000~\u0000\u0018ppppppppppq\u0000~\u0000\u0017ppppppppppppppq\u0000~\u0000\u0005q\u0000~\u0000\bppppppppq\u0000~\u0000\u000fpppppppq\u0000~\u0000\u0007q\u0000~\u0000Tpq\u0000~\u0000\fppq\u0000~\u0000\tpppppppppppq\u0000~\u0000Bpppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0006q\u0000~\u0000Xppq\u0000~\u0000+ppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Fppppppppppq\u0000~\u0000\npppppppppppppppp");

    public String getTYPE() {
        return _TYPE;
    }

    public void setTYPE(String value) {
        _TYPE = value;
    }

    public java.util.List getPARAM() {
        return _PARAM;
    }

    public String getCLASS() {
        return _CLASS;
    }

    public void setCLASS(String value) {
        _CLASS = value;
    }

    public boolean isCYCLENOTIFICATION() {
        if (!has_CYCLENOTIFICATION) {
            return com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse("true")).booleanValue();
        } else {
            return _CYCLENOTIFICATION;
        }
    }

    public void setCYCLENOTIFICATION(boolean value) {
        _CYCLENOTIFICATION = value;
        has_CYCLENOTIFICATION = true;
    }

    public String getNAME() {
        return _NAME;
    }

    public void setNAME(String value) {
        _NAME = value;
    }

    public boolean isAPPNOTIFICATION() {
        if (!has_APPNOTIFICATION) {
            return com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse("true")).booleanValue();
        } else {
            return _APPNOTIFICATION;
        }
    }

    public void setAPPNOTIFICATION(boolean value) {
        _APPNOTIFICATION = value;
        has_APPNOTIFICATION = true;
    }

    public String getDEPENDS() {
        return _DEPENDS;
    }

    public void setDEPENDS(String value) {
        _DEPENDS = value;
    }

    public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
        return new sparrow.elt.jaxb.impl.SERVICETypeImpl.Unmarshaller(context);
    }

    public Class getPrimaryInterfaceClass() {
        return PRIMARY_INTERFACE_CLASS;
    }

    public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = _PARAM.size();
        while (idx2 != len2) {
            context.startElement("", "PARAM");
            int idx_0 = idx2;
            context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _PARAM.get(idx_0 ++)));
            context.endAttributes();
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _PARAM.get(idx2 ++)));
            context.endElement();
        }
    }

    public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = _PARAM.size();
        if (has_APPNOTIFICATION) {
            context.startAttribute("", "APP-NOTIFICATION");
            context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_APPNOTIFICATION))));
            context.endAttribute();
        }
        if (has_CYCLENOTIFICATION) {
            context.startAttribute("", "CYCLE-NOTIFICATION");
            context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_CYCLENOTIFICATION))));
            context.endAttribute();
        }
        if (_DEPENDS!= null) {
            context.startAttribute("", "DEPENDS");
            context.text(((String) _DEPENDS));
            context.endAttribute();
        }
        context.startAttribute("", "NAME");
        context.text(((String) _NAME));
        context.endAttribute();
        if (_TYPE!= null) {
            context.startAttribute("", "TYPE");
            context.text(((String) _TYPE));
            context.endAttribute();
        }
        if (_CLASS!= null) {
            context.startAttribute("", "CLASS");
            context.text(((String) _CLASS));
            context.endAttribute();
        }
    }

    public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = _PARAM.size();
    }

    public Class getPrimaryInterface() {
        return (sparrow.elt.jaxb.SERVICEType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
    {


        public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
            super(context, "---------------");
        }

        protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
            return sparrow.elt.jaxb.impl.SERVICETypeImpl.this;
        }

        public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  0 :
                    if ("".equals(___uri)&&"PARAM".equals(___local)) {
                        context.pushAttributes(__atts);
                        goto3();
                        return ;
                    }
                    revertToParentFromEnterElement(___uri, ___local, __atts);
                    return ;
            }
            super.enterElement(___uri, ___local, __atts);
        }

        public void leaveElement(String ___uri, String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  0 :
                    revertToParentFromLeaveElement(___uri, ___local);
                    return ;
                case  4 :
                    if ("".equals(___uri)&&"PARAM".equals(___local)) {
                        context.popAttributes();
                        goto0();
                        return ;
                    }
                    break;
            }
            super.leaveElement(___uri, ___local);
        }

        public void enterAttribute(String ___uri, String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  0 :
                    if ("".equals(___uri)&&"APP-NOTIFICATION".equals(___local)) {
                        state = 1;
                        return ;
                    }
                    if ("".equals(___uri)&&"DEPENDS".equals(___local)) {
                        state = 7;
                        return ;
                    }
                    if ("".equals(___uri)&&"NAME".equals(___local)) {
                        state = 9;
                        return ;
                    }
                    if ("".equals(___uri)&&"TYPE".equals(___local)) {
                        state = 11;
                        return ;
                    }
                    if ("".equals(___uri)&&"CLASS".equals(___local)) {
                        state = 13;
                        return ;
                    }
                    if ("".equals(___uri)&&"CYCLE-NOTIFICATION".equals(___local)) {
                        state = 5;
                        return ;
                    }
                    revertToParentFromEnterAttribute(___uri, ___local);
                    return ;
                case  3 :
                    if ("".equals(___uri)&&"VALUE".equals(___local)) {
                        _PARAM.add(((sparrow.elt.jaxb.impl.PARAMTypeImpl) spawnChildFromEnterAttribute((sparrow.elt.jaxb.impl.PARAMTypeImpl.class), 4, ___uri, ___local)));
                        return ;
                    }
                    if ("".equals(___uri)&&"NAME".equals(___local)) {
                        _PARAM.add(((sparrow.elt.jaxb.impl.PARAMTypeImpl) spawnChildFromEnterAttribute((sparrow.elt.jaxb.impl.PARAMTypeImpl.class), 4, ___uri, ___local)));
                        return ;
                    }
                    break;
            }
            super.enterAttribute(___uri, ___local);
        }

        public void leaveAttribute(String ___uri, String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  0 :
                    revertToParentFromLeaveAttribute(___uri, ___local);
                    return ;
                case  14 :
                    if ("".equals(___uri)&&"CLASS".equals(___local)) {
                        goto0();
                        return ;
                    }
                    break;
                case  8 :
                    if ("".equals(___uri)&&"DEPENDS".equals(___local)) {
                        goto0();
                        return ;
                    }
                    break;
                case  2 :
                    if ("".equals(___uri)&&"APP-NOTIFICATION".equals(___local)) {
                        goto0();
                        return ;
                    }
                    break;
                case  6 :
                    if ("".equals(___uri)&&"CYCLE-NOTIFICATION".equals(___local)) {
                        goto0();
                        return ;
                    }
                    break;
                case  10 :
                    if ("".equals(___uri)&&"NAME".equals(___local)) {
                        goto0();
                        return ;
                    }
                    break;
                case  12 :
                    if ("".equals(___uri)&&"TYPE".equals(___local)) {
                        goto0();
                        return ;
                    }
                    break;
            }
            super.leaveAttribute(___uri, ___local);
        }

        public void text(String value)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            try {
                switch (state) {
                    case  13 :
                        _CLASS = value;
                        state = 14;
                        return ;
                    case  0 :
                        revertToParentFromText(value);
                        return ;
                    case  11 :
                        _TYPE = value;
                        state = 12;
                        return ;
                    case  7 :
                        _DEPENDS = value;
                        state = 8;
                        return ;
                    case  9 :
                        _NAME = value;
                        state = 10;
                        return ;
                    case  1 :
                        _APPNOTIFICATION = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                        has_APPNOTIFICATION = true;
                        state = 2;
                        return ;
                    case  5 :
                        _CYCLENOTIFICATION = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                        has_CYCLENOTIFICATION = true;
                        state = 6;
                        return ;
                }
            } catch (RuntimeException e) {
                handleUnexpectedTextException(value, e);
            }
        }

        public void leaveChild(int nextState)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (nextState) {
                case  4 :
                    state = 4;
                    return ;
            }
            super.leaveChild(nextState);
        }

        private void goto0()
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            int idx;
            state = 0;
            idx = context.getAttribute("", "APP-NOTIFICATION");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
            idx = context.getAttribute("", "CYCLE-NOTIFICATION");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
            idx = context.getAttribute("", "DEPENDS");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
            idx = context.getAttribute("", "NAME");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
            idx = context.getAttribute("", "TYPE");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
            idx = context.getAttribute("", "CLASS");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
        }

        private void goto3()
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            int idx;
            state = 3;
            idx = context.getAttribute("", "VALUE");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
            idx = context.getAttribute("", "NAME");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
        }

    }

}
