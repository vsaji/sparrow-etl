//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vBeta 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.03.08 at 03:44:45 SGT 
//


package sparrow.elt.jaxb;

public class ObjectFactory
    extends com.sun.xml.bind.DefaultJAXBContextImpl
{


    static {
        com.sun.xml.bind.ImplementationRegistry ir = com.sun.xml.bind.ImplementationRegistry.getInstance();
        ir.setDefaultImpl((sparrow.elt.jaxb.LOADBALANCEType.class), (sparrow.elt.jaxb.impl.LOADBALANCETypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.SERVICEType.class), (sparrow.elt.jaxb.impl.SERVICETypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.DATAEXTRACTORType.class), (sparrow.elt.jaxb.impl.DATAEXTRACTORTypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.CYCLEDEPENDENCIESype.class), (sparrow.elt.jaxb.impl.CYCLEDEPENDENCIESypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.MODULEPARAMType.class), (sparrow.elt.jaxb.impl.MODULEPARAMTypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.DATAPROVIDERSType.class), (sparrow.elt.jaxb.impl.DATAPROVIDERSTypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.SERVICESType.class), (sparrow.elt.jaxb.impl.SERVICESTypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.RESOURCEType.class), (sparrow.elt.jaxb.impl.RESOURCETypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.EXCEPTIONHANDLERType.class), (sparrow.elt.jaxb.impl.EXCEPTIONHANDLERTypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.NOTIFIERType.class), (sparrow.elt.jaxb.impl.NOTIFIERTypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.RESOURCESType.class), (sparrow.elt.jaxb.impl.RESOURCESTypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.NOTIFIERSType.class), (sparrow.elt.jaxb.impl.NOTIFIERSTypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.PARAMType.class), (sparrow.elt.jaxb.impl.PARAMTypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.DATAPROVIDERType.class), (sparrow.elt.jaxb.impl.DATAPROVIDERTypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.DATAWRITERSType.class), (sparrow.elt.jaxb.impl.DATAWRITERSTypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.DATALOOKUPType.class), (sparrow.elt.jaxb.impl.DATALOOKUPTypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.DATATRANSFORMERType.class), (sparrow.elt.jaxb.impl.DATATRANSFORMERTypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.ERRORType.class), (sparrow.elt.jaxb.impl.ERRORTypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.HANDLEType.class), (sparrow.elt.jaxb.impl.HANDLETypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.MODULEType.class), (sparrow.elt.jaxb.impl.MODULETypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.LOOKUPType.class), (sparrow.elt.jaxb.impl.LOOKUPTypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.SPEARCONFIGType.class), (sparrow.elt.jaxb.impl.SPEARCONFIGTypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.HANDLERType.class), (sparrow.elt.jaxb.impl.HANDLERTypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.SPEARCONFIG.class), (sparrow.elt.jaxb.impl.SPEARCONFIGImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.WRITERType.class), (sparrow.elt.jaxb.impl.WRITERTypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.ASSERTERype.class), (sparrow.elt.jaxb.impl.ASSERTERypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.EVENTSType.class), (sparrow.elt.jaxb.impl.EVENTSTypeImpl.class));
        ir.setDefaultImpl((sparrow.elt.jaxb.EVENTType.class), (sparrow.elt.jaxb.impl.EVENTTypeImpl.class));
    }

    public ObjectFactory() {
        super(new sparrow.elt.jaxb.ObjectFactory.GrammarInfoImpl());
    }

    /**
     * Create an instance of the specified Java content interface.
     * If the Java content interface has been replaced via the 
     * setImplementation method, than an instance of the client 
     * specified implementation class will be instantiated instead.
     * 
     * @param javaContentInterface the Class object of the javacontent interface to instantiate
     * @return a new instance
     * @throws JAXBException if an error occurs
     */
    public static Object newInstance(Class javaContentInterface)
        throws javax.xml.bind.JAXBException
    {
        return com.sun.xml.bind.DefaultJAXBContextImpl.newInstance(javaContentInterface);
    }

    public static sparrow.elt.jaxb.LOADBALANCEType createLOADBALANCEType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.LOADBALANCEType) newInstance((sparrow.elt.jaxb.LOADBALANCEType.class)));
    }

    public static sparrow.elt.jaxb.SERVICEType createSERVICEType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.SERVICEType) newInstance((sparrow.elt.jaxb.SERVICEType.class)));
    }

    public static sparrow.elt.jaxb.DATAEXTRACTORType createDATAEXTRACTORType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.DATAEXTRACTORType) newInstance((sparrow.elt.jaxb.DATAEXTRACTORType.class)));
    }

    public static sparrow.elt.jaxb.CYCLEDEPENDENCIESype createCYCLEDEPENDENCIESype()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.CYCLEDEPENDENCIESype) newInstance((sparrow.elt.jaxb.CYCLEDEPENDENCIESype.class)));
    }

    public static sparrow.elt.jaxb.MODULEPARAMType createMODULEPARAMType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.MODULEPARAMType) newInstance((sparrow.elt.jaxb.MODULEPARAMType.class)));
    }

    public static sparrow.elt.jaxb.DATAPROVIDERSType createDATAPROVIDERSType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.DATAPROVIDERSType) newInstance((sparrow.elt.jaxb.DATAPROVIDERSType.class)));
    }

    public static sparrow.elt.jaxb.SERVICESType createSERVICESType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.SERVICESType) newInstance((sparrow.elt.jaxb.SERVICESType.class)));
    }

    public static sparrow.elt.jaxb.RESOURCEType createRESOURCEType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.RESOURCEType) newInstance((sparrow.elt.jaxb.RESOURCEType.class)));
    }

    public static sparrow.elt.jaxb.EXCEPTIONHANDLERType createEXCEPTIONHANDLERType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.EXCEPTIONHANDLERType) newInstance((sparrow.elt.jaxb.EXCEPTIONHANDLERType.class)));
    }

    public static sparrow.elt.jaxb.NOTIFIERType createNOTIFIERType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.NOTIFIERType) newInstance((sparrow.elt.jaxb.NOTIFIERType.class)));
    }

    public static sparrow.elt.jaxb.RESOURCESType createRESOURCESType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.RESOURCESType) newInstance((sparrow.elt.jaxb.RESOURCESType.class)));
    }

    public static sparrow.elt.jaxb.NOTIFIERSType createNOTIFIERSType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.NOTIFIERSType) newInstance((sparrow.elt.jaxb.NOTIFIERSType.class)));
    }

    public static sparrow.elt.jaxb.PARAMType createPARAMType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.PARAMType) newInstance((sparrow.elt.jaxb.PARAMType.class)));
    }

    public static sparrow.elt.jaxb.DATAPROVIDERType createDATAPROVIDERType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.DATAPROVIDERType) newInstance((sparrow.elt.jaxb.DATAPROVIDERType.class)));
    }

    public static sparrow.elt.jaxb.DATAWRITERSType createDATAWRITERSType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.DATAWRITERSType) newInstance((sparrow.elt.jaxb.DATAWRITERSType.class)));
    }

    public static sparrow.elt.jaxb.DATALOOKUPType createDATALOOKUPType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.DATALOOKUPType) newInstance((sparrow.elt.jaxb.DATALOOKUPType.class)));
    }

    public static sparrow.elt.jaxb.DATATRANSFORMERType createDATATRANSFORMERType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.DATATRANSFORMERType) newInstance((sparrow.elt.jaxb.DATATRANSFORMERType.class)));
    }

    public static sparrow.elt.jaxb.ERRORType createERRORType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.ERRORType) newInstance((sparrow.elt.jaxb.ERRORType.class)));
    }

    public static sparrow.elt.jaxb.HANDLEType createHANDLEType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.HANDLEType) newInstance((sparrow.elt.jaxb.HANDLEType.class)));
    }

    public static sparrow.elt.jaxb.MODULEType createMODULEType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.MODULEType) newInstance((sparrow.elt.jaxb.MODULEType.class)));
    }

    public static sparrow.elt.jaxb.LOOKUPType createLOOKUPType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.LOOKUPType) newInstance((sparrow.elt.jaxb.LOOKUPType.class)));
    }

    public static sparrow.elt.jaxb.SPEARCONFIGType createSPEARCONFIGType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.SPEARCONFIGType) newInstance((sparrow.elt.jaxb.SPEARCONFIGType.class)));
    }

    public static sparrow.elt.jaxb.HANDLERType createHANDLERType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.HANDLERType) newInstance((sparrow.elt.jaxb.HANDLERType.class)));
    }

    public static sparrow.elt.jaxb.SPEARCONFIG createSPEARCONFIG()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.SPEARCONFIG) newInstance((sparrow.elt.jaxb.SPEARCONFIG.class)));
    }

    public static sparrow.elt.jaxb.WRITERType createWRITERType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.WRITERType) newInstance((sparrow.elt.jaxb.WRITERType.class)));
    }

    public static sparrow.elt.jaxb.ASSERTERype createASSERTERype()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.ASSERTERype) newInstance((sparrow.elt.jaxb.ASSERTERype.class)));
    }

    public static sparrow.elt.jaxb.EVENTSType createEVENTSType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.EVENTSType) newInstance((sparrow.elt.jaxb.EVENTSType.class)));
    }

    public static sparrow.elt.jaxb.EVENTType createEVENTType()
        throws javax.xml.bind.JAXBException
    {
        return ((sparrow.elt.jaxb.EVENTType) newInstance((sparrow.elt.jaxb.EVENTType.class)));
    }

    private static class GrammarInfoImpl
        extends com.sun.xml.bind.GrammarInfo
    {


        public Class getRootElement(String uri, String local) {
            if ("".equals(uri)&&"SPEAR-CONFIG".equals(local)) {
                return (sparrow.elt.jaxb.impl.SPEARCONFIGImpl.class);
            }
            return null;
        }

        public String[] getProbePoints() {
            return new java.lang.String[] {"", "SPEAR-CONFIG"};
        }

    }

}
