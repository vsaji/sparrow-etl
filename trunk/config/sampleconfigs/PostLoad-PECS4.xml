<?xml version="1.0" encoding="UTF-8"?>
<!--Sample XML file generated by XML Spy v4.4 U (http://www.xmlspy.com)-->
<SPEAR-CONFIG xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="spear.xsd">
	<MODULE>
		<NAME>Test Application</NAME>
		<PROCESS-ID>TEST</PROCESS-ID>
		<DESCRIPTION>For Testing</DESCRIPTION>
		<CYCLE-DEPENDENCIES>
			<ASSERTER CLASS="com.cs.sg.spear.core.cycledependency.SystemGCForcer"/>
			<ASSERTER CLASS="com.cs.sg.spear.core.cycledependency.StatsCollector"/>
		</CYCLE-DEPENDENCIES>
		<MODULE-PARAM>
		   <PARAM NAME="spear.semaphore.check" VALUE="false"/>
		   <PARAM NAME="spear.cycle.interval" VALUE="5000"/>
		   <PARAM NAME="spear.shutdown" VALUE="Sun:23:15"/>
		   <PARAM NAME="spear.cycle.count" VALUE="-1"/>
		   <PARAM NAME="spear.cache.pool.size" VALUE="10"/>
    	   <PARAM NAME="spear.watcher.enable" VALUE="false"/>
   		   <PARAM NAME="spear.watcher.interval" VALUE="2000"/>		   
  		   <PARAM NAME="pec.dir" VALUE="C:/app/temp/pecs"/>	
  		   <PARAM NAME="pec.report" VALUE="${module@pec.dir}/report"/>	
  		   <PARAM NAME="pec.archive" VALUE="${module@pec.dir}/archive"/>
		   <PARAM NAME="col.def" VALUE="C:\app\spear\vsaji\SPEAR2.vsaji\pacbo\PACBO_SPEAR\Source_SPEAR_ADV\config\coldef\csvcoldef.xml"/>
		</MODULE-PARAM>
	</MODULE>
	
	<DATA-EXTRACTOR NAME="driver" TYPE="CSV">
			<PARAM NAME="fetch.size" VALUE="500"/>
			<PARAM NAME="result.wrap" VALUE="disconnected"/>
			<PARAM NAME="file.path" VALUE="${module@pec.dir}"/>
			<PARAM NAME="file.name" VALUE="PacificYTD.dat"/>
			<PARAM NAME="file.delimiter" VALUE="~"/>
			<PARAM NAME="column.definition" VALUE="${module@col.def}"/>	
			<PARAM NAME="trim.value" VALUE="true"/>
			<PARAM NAME="start.line.number" VALUE="0"/>
			<PARAM NAME="ignore.collen.mismatch" VALUE="true"/>
			<PARAM NAME="validation.required" VALUE="false"/>
			<PARAM NAME="rejection.report.type" VALUE="file"/>
			<PARAM NAME="rejection.report.source" VALUE="${module@pec.dir}/report"/>
			<PARAM NAME="fail.dir" VALUE="H:/Testing-spearXML/report"/>
			<PARAM NAME="post.process" VALUE="ignore"/>
			<PARAM NAME="post.process.dir" VALUE="${module@pec.dir}/archive"/>
			<PARAM NAME="wait.for.file" VALUE="true"/>
			<PARAM NAME="polling.interval" VALUE="5000"/>
			<PARAM NAME="polling.count" VALUE="5"/>
	</DATA-EXTRACTOR>
	
	<DATA-TRANSFORMER NAME="trans" TYPE="TEST" POOL-SIZE="10" THREAD-COUNT="1">
		<PARAM NAME="rejection.report.type" VALUE="file"/>
		<PARAM NAME="rejection.report.source" VALUE="${module@pec.dir}/report"/>
		<PARAM NAME="script.input" VALUE="inline"/>
		<PARAM NAME="script.value">
			<![CDATA[ 
				import com.cs.sg.spear.core.dao.impl.RecordSet;

				value = dataset.driverRow.getValue(2);
				rs = dataset.getLookupResult("srcSysId");

				//System.out.println("Driver row:"+value+",srcSysId Record Count:"+rs.getRowCount());
				//logger.info("This:"+current);
				//current.markForRejection("Test rejection from MVEL");
				logger.info("Driver Row:"+current.driverRow);

				//dataset.getDriverRow().getValue("KDLKJ");


				//dataset.getDataSetAsKeyValue().get("driver$KDLKJ");KDLKJ


				//dataset.getLookupResult("newTrdNo").getFristRow().getValue("ASJHA")
				//dataset.getDataSetAsKeyValue().get("newTrdNo$ASJHA");

				//dataout.addObject("abc",contructedString);

			]]>
		</PARAM>
	</DATA-TRANSFORMER>

	<DATA-WRITERS ON-ERROR="ignore" THREAD-COUNT="5">

	<WRITER NAME="filewrite" TYPE="TEST" >
		<PARAM NAME="file.close.event" VALUE="end.app"/>
		<PARAM NAME="file.path" VALUE="${module@pec.dir}/report"/>
		<PARAM NAME="file.name" VALUE="LOG_RECORDS.log"/>
		<PARAM NAME="all.or.none" VALUE="true"/>		
		<PARAM NAME="async.write" VALUE="true"/>		
		<PARAM NAME="file.output" VALUE="single"/>		
		<PARAM NAME="header.row.1" VALUE="HEADER,TEST,${CURRENT_DATE#yyyyddMM}"/>		
		<PARAM NAME="footer.row" VALUE="FOOTER,${RECORD_COUNT}"/>		
		<PARAM NAME="flush.type" VALUE="end.cycle"/>
		<PARAM NAME="key.name" VALUE="abc"/>
	</WRITER>
	<WRITER NAME="linkTableWriter2" TYPE="TEST" DEPENDS="filewrite" SINGLETON="false">
			<PARAM NAME="query"><![CDATA[insert into sample1 values(${driver$TradeDate},${driver$SlsrID})]]></PARAM>
			<PARAM NAME="resource" VALUE="CSAR"/>
			<PARAM NAME="exempt.trans" VALUE="true"/>
			<PARAM NAME="batch.size" VALUE="100"/>
	</WRITER>
	<WRITER NAME="dbPecTradeWrite" TYPE="TEST">
		<PARAM NAME="query"><![CDATA[		
		DECLARE
			CURSOR pec_trade_rec_count_cur(p_pec_trd_nbr VARCHAR2) IS 
				SELECT count(*) FROM pec_trade WHERE pec_trd_nbr_q = p_pec_trd_nbr;					
			row_count NUMBER;							
		BEGIN
			row_count := 0;

			OPEN pec_trade_rec_count_cur(${PEC_TRD_NBR_Q});
			FETCH pec_trade_rec_count_cur INTO row_count;
			CLOSE pec_trade_rec_count_cur;

			IF row_count = 0 THEN		

			insert into PEC_TRADE (
			PEC_TRD_NBR_Q,	PEC_SRC_SYS_ID_C,	PEC_CTPY_SUBAC_ID_C,	PEC_SEC_ID_C,
			PEC_TRD_TYP_C, 	PEC_TRD_GRP_ID_C,   	PEC_SRC_SYS_TRD_NBR_Q,	PEC_ORIG_TRD_NBR_Q,
			PEC_SLSM_C,	PEC_TRDR_C, 		PEC_TRD_D, 		PEC_SETTL_D,
			PEC_PRCSG_D, 	PEC_GESC_PRCSG_D, 	PEC_ACCTG_PER_Q,	PEC_IS_SFD_I,
			PEC_TRD_PX_M, 	PEC_QTY_Q, 		PEC_PRIN_M, 		PEC_NET_PRCD_M,
			PEC_SLS_CR_M, 	PEC_SFD_AMT_M, 		PEC_CSH_RBT_AMT_M, 	PEC_GR_COMM_M,
			PEC_BKRG_AMT_M, PEC_BRKR_ID_C, 		PEC_TRD_CXL_I, 		PEC_TRD_PRIN_AGNCY_FLG_C,
			PEC_TRD_BUY_SELL_FLG_C, 		PEC_FAC_PNL_M, 		PEC_TRDG_AC_ID_C,
			PEC_COLLN_ID_C,	PEC_EXCEPT_TRD_FLG_C,	PEC_ISS_TO_RPT_CUR_FX_P,PEC_ROW_ADD_ID_C, 
			PEC_ROW_ADD_DZ, PEC_ROW_MOD_ID_C, 	PEC_ROW_MOD_DZ, 	PEC_ROW_IS_DELD_I) 

			values (
			${PEC_TRD_NBR_Q},	${PEC_SRC_SYS_ID_C},	${PEC_CTPY_SUBAC_ID_C},	${PEC_SEC_ID_C},
			${PEC_TRD_TYP_C}, 	${PEC_TRD_GRP_ID_C},   ${PEC_SRC_SYS_TRD_NBR_Q},${PEC_ORIG_TRD_NBR_Q},
			${PEC_SLSM_C}, 		${PEC_TRDR_C}, 		${PEC_TRD_D}, 		${PEC_SETTL_D},
			${PEC_PRCSG_D}, 	${PEC_GESC_PRCSG_D}, 	${PEC_ACCTG_PER_Q},	${PEC_IS_SFD_I},
			${PEC_TRD_PX_M}, 	${PEC_QTY_Q}, 		${PEC_PRIN_M}, 		${PEC_NET_PRCD_M},
			${PEC_SLS_CR_M}, 	${PEC_SFD_AMT_M}, 	${PEC_CSH_RBT_AMT_M}, 	${PEC_GR_COMM_M},
			${PEC_BKRG_AMT_M}, 	${PEC_BRKR_ID_C}, 	${PEC_TRD_CXL_I}, 	${PEC_TRD_PRIN_AGNCY_FLG_C},
			${PEC_TRD_BUY_SELL_FLG_C}, 			${PEC_FAC_PNL_M}, 	${PEC_TRDG_AC_ID_C}, 	
			${PEC_COLLN_ID_C},	${PEC_EXCEPT_TRD_FLG_C},${PEC_ISS_TO_RPT_CUR_FX_P},${PEC_ROW_ADD_ID_C}, 
			sysdate,		NULL,			NULL,			'N');

			ELSE

			update pec_trade
			set
			PEC_SRC_SYS_ID_C =	    ${PEC_SRC_SYS_ID_C}, 
			PEC_CTPY_SUBAC_ID_C =	    ${PEC_CTPY_SUBAC_ID_C}, 
			PEC_SEC_ID_C =		    ${PEC_SEC_ID_C},
			PEC_TRD_TYP_C =		    ${PEC_TRD_TYP_C},
			PEC_TRD_GRP_ID_C =	    ${PEC_TRD_GRP_ID_C},
			PEC_SRC_SYS_TRD_NBR_Q =	    ${PEC_SRC_SYS_TRD_NBR_Q},
			PEC_ORIG_TRD_NBR_Q =	    ${PEC_ORIG_TRD_NBR_Q},
			PEC_SLSM_C =		    ${PEC_SLSM_C},
			PEC_TRDR_C =		    ${PEC_TRDR_C},
			PEC_TRD_D =		    ${PEC_TRD_D},
			PEC_SETTL_D =		    ${PEC_SETTL_D},
			PEC_PRCSG_D =		    ${PEC_PRCSG_D},
			PEC_GESC_PRCSG_D =	    ${PEC_GESC_PRCSG_D},
			PEC_ACCTG_PER_Q =	    ${PEC_ACCTG_PER_Q},
			PEC_IS_SFD_I =		    ${PEC_IS_SFD_I},
			PEC_TRD_PX_M =		    ${PEC_TRD_PX_M},
			PEC_QTY_Q =		    ${PEC_QTY_Q},
			PEC_PRIN_M =		    ${PEC_PRIN_M},
			PEC_NET_PRCD_M =	    ${PEC_NET_PRCD_M},
			PEC_SLS_CR_M =		    ${PEC_SLS_CR_M},
			PEC_SFD_AMT_M =		    ${PEC_SFD_AMT_M},
			PEC_CSH_RBT_AMT_M =	    ${PEC_CSH_RBT_AMT_M},
			PEC_GR_COMM_M =		    ${PEC_GR_COMM_M},
			PEC_BKRG_AMT_M =	    ${PEC_BKRG_AMT_M},
			PEC_BRKR_ID_C =		    ${PEC_BRKR_ID_C},
			PEC_TRD_CXL_I =		    ${PEC_TRD_CXL_I},
			PEC_TRD_PRIN_AGNCY_FLG_C =  ${PEC_TRD_PRIN_AGNCY_FLG_C},
			PEC_TRD_BUY_SELL_FLG_C =    ${PEC_TRD_BUY_SELL_FLG_C},
			PEC_FAC_PNL_M =		    ${PEC_FAC_PNL_M},
			PEC_TRDG_AC_ID_C =	    ${PEC_TRDG_AC_ID_C},
			PEC_COLLN_ID_C =	    ${PEC_COLLN_ID_C},
			PEC_EXCEPT_TRD_FLG_C =	    ${PEC_EXCEPT_TRD_FLG_C},
			PEC_ISS_TO_RPT_CUR_FX_P =   ${PEC_ISS_TO_RPT_CUR_FX_P},
			PEC_ROW_MOD_ID_C =	    ${PEC_ROW_MOD_ID_C},
			PEC_ROW_MOD_DZ =   	    sysdate
			where PEC_TRD_NBR_Q 	=   ${PEC_TRD_NBR_Q};

			END IF;
		END;]]> </PARAM>
			<PARAM NAME="resource" VALUE="DSGPECS4"/>
			<PARAM NAME="batch.size" VALUE="10"/> 
		</WRITER>
	</DATA-WRITERS>
	
	<RESOURCES>
		<RESOURCE NAME="CSAR" TYPE="DB" LOAD-PRIORITY="2" UNLOAD-PRIORITY="1">
			<PARAM NAME="driver.classname" VALUE="oracle.jdbc.OracleDriver"/>
			<PARAM NAME="connection.url" VALUE="jdbc:oracle:thin:@167.168.137.188:1522:DSGINS41"/>
			<PARAM NAME="user.name" VALUE="inspire_dev"/>
			<PARAM NAME="password" VALUE="inspire_dev"/>
			<PARAM NAME="pool.size" VALUE="10"/>
			<PARAM NAME="pool.on.start" VALUE="false"/>
			<PARAM NAME="max.wait" VALUE="5000"/>
			<PARAM NAME="default.autocommit" VALUE="true"/>
		</RESOURCE>
		<RESOURCE NAME="DSGPECS4" TYPE="DB" LOAD-PRIORITY="2" UNLOAD-PRIORITY="1">
			<PARAM NAME="driver.classname" VALUE="oracle.jdbc.OracleDriver"/>
			<PARAM NAME="connection.url" VALUE="jdbc:oracle:thin:@(DESCRIPTION =         (ADDRESS_LIST = (ADDRESS = (PROTOCOL = TCP)        (HOST = sgs75h-090d.sg.csfb.com)(PORT = 1521))) (CONNECT_DATA = (SID = DSGPECS4))   )"/>
			<PARAM NAME="user.name" VALUE="pecs_admin"/>
			<PARAM NAME="password" VALUE="pecs_admin"/>
			<PARAM NAME="pool.size" VALUE="10"/>
			<PARAM NAME="pool.on.start" VALUE="false"/>
			<PARAM NAME="max.wait" VALUE="5000"/>
			<PARAM NAME="default.autocommit" VALUE="true"/>
		</RESOURCE>
	</RESOURCES>
	
	<DATA-PROVIDERS>
		<DATA-PROVIDER NAME="processID" TYPE="DB">
			<PARAM NAME="query"><![CDATA[select  PEC_PARM_VAL2_C, PEC_PARM_ID_C, PEC_PARM_VAL1_C, PEC_ROW_IS_DELD_I  
			from PEC_PARM 
			where PEC_PARM_ID_C = 'ProcId' and  PEC_PARM_VAL1_C = 'GetGescPostLoadProc' and PEC_ROW_IS_DELD_I = 'N' ]]></PARAM>
			<PARAM NAME="resource" VALUE="DSGPECS4"/>
			<PARAM NAME="fetch.size" VALUE="1"/>
			<PARAM NAME="result.wrap" VALUE="disconnected"/>
			<PARAM NAME="cache.type" VALUE="begin.app"/>			
		</DATA-PROVIDER>		
		<DATA-PROVIDER NAME="fileDP" TYPE="CSV">
			<PARAM NAME="result.wrap" VALUE="disconnected"/>
			<PARAM NAME="file.path" VALUE="${module@pec.dir}"/>
			<PARAM NAME="file.name" VALUE="refdata.dat"/>
			<PARAM NAME="file.delimiter" VALUE="~"/>
			<PARAM NAME="trim.value" VALUE="true"/>
			<PARAM NAME="column.definition" VALUE="${module@col.def}"/>	
			<PARAM NAME="start.line.number" VALUE="0"/>
			<PARAM NAME="rejection.report.type" VALUE="file"/>
			<PARAM NAME="rejection.report.source" VALUE="${module@pec.dir}/report"/>
			<PARAM NAME="fail.dir" VALUE="H:/Testing-spearXML/report"/>
			<PARAM NAME="cache.type" VALUE="begin.app"/>	
		</DATA-PROVIDER>
		<DATA-PROVIDER NAME="pecsSrcSysId" TYPE="DB">
			<PARAM NAME="query"><![CDATA[select PEC_PARM_VAL2_C, PEC_PARM_VAL1_C, PEC_PARM_ID_C, PEC_ROW_IS_DELD_I 
			from pec_parm where  PEC_PARM_ID_C = 'GescCatg2PecsSrcSys' and  PEC_ROW_IS_DELD_I = 'N' and PEC_PARM_VAL1_C =  '${driver$Category}']]></PARAM>
			<PARAM NAME="resource" VALUE="DSGPECS4"/>
			<PARAM NAME="fetch.size" VALUE="1"/>
			<PARAM NAME="result.wrap" VALUE="disconnected"/>			
			<PARAM NAME="cache.type" VALUE="incremental"/>			
		</DATA-PROVIDER>

		<DATA-PROVIDER NAME="pecsSrcSys" TYPE="DB">
			<PARAM NAME="query"><![CDATA[SELECT PEC_SRC_TWN_C, PEC_NATV_RPT_CUR_C, PEC_SEC_CATG_C,
						PEC_SRC_SYS_ID_C
						FROM PEC_SRC_SYS
						WHERE PEC_SRC_SYS_ID_C = '${srcSysId$PEC_PARM_VAL2_C}' ]]></PARAM>
			<PARAM NAME="resource" VALUE="DSGPECS4"/>
			<PARAM NAME="fetch.size" VALUE="1"/>
			<PARAM NAME="result.wrap" VALUE="disconnected"/>
			<PARAM NAME="cache.type" VALUE="incremental"/>			
		</DATA-PROVIDER>		

		<DATA-PROVIDER NAME="pecSecInfo" TYPE="DB">
			<PARAM NAME="query"><![CDATA[select PEC_SEC_ID_C, PEC_SEC_CATG_C, PEC_SEC_SHRT_N, PEC_SEC_LNG_N, PEC_SEC_ISS_CNTRY_C, 
			PEC_SEC_PRIM_EXCH_C, PEC_SEC_HI_LVL_PROD_TYP_C, PEC_SEC_TYP_C, PEC_SEC_ISS_CUR_C, 
			PEC_SEC_OTC_I, PEC_SEC_LMKT_C, PEC_SEC_ISIN_C, PEC_SEC_CEDEL_C, PEC_SEC_CUSIP_C, 
			PEC_SEC_ISTAR_C, PEC_SEC_BSI_C, PEC_SEC_CONTR_SIZE_N, PEC_SEC_L4_SECTR_C, PEC_SEC_ANALYST_T,
			PEC_SEC_RECM_T
			from	PEC_SEC_INFO
			where	PEC_SEC_ID_C = ${driver$ProductID} and PEC_SEC_CATG_C = ${srcSys$PEC_SEC_CATG_C}]]></PARAM>
			<PARAM NAME="resource" VALUE="DSGPECS4"/>
			<PARAM NAME="fetch.size" VALUE="1"/>
			<PARAM NAME="result.wrap" VALUE="disconnected"/>
			<PARAM NAME="cache.type" VALUE="begin.app"/>
		</DATA-PROVIDER>	
		
		<DATA-PROVIDER NAME="pecsExistingTradeNo" TYPE="DB">
			<PARAM NAME="query"><![CDATA[select * 
			from PEC_TRADE  
			where  PEC_ROW_IS_DELD_I = 'N' and
			 PEC_SRC_SYS_ID_C =  '${srcSysId$PEC_PARM_VAL2_C}' and PEC_SRC_SYS_TRD_NBR_Q = '${driver$TradeID}' || '-' || '${driver$VersionID}' || '-' || '${driver$SlsrID}' ]]></PARAM>
			<PARAM NAME="resource" VALUE="DSGPECS4"/>
			<PARAM NAME="fetch.size" VALUE="1"/>
			<PARAM NAME="result.wrap" VALUE="disconnected"/>
		</DATA-PROVIDER>

		<DATA-PROVIDER NAME="pecsNewTradeNo" TYPE="DB">
			<PARAM NAME="query"><![CDATA[select PEC_TRD_NBR_Q.nextval TRD_NBR from dual]]></PARAM>
			<PARAM NAME="resource" VALUE="DSGPECS4"/>
			<PARAM NAME="fetch.size" VALUE="1"/>
			<PARAM NAME="result.wrap" VALUE="disconnected"/>			
		</DATA-PROVIDER>

		<DATA-PROVIDER NAME="pecsTrdAcCatg" TYPE="DB">
			<PARAM NAME="query"><![CDATA[select PEC_SRC_SYS_ID_C , PEC_SRC_SYS_N, PEC_SRC_TWN_C, PEC_SEC_CATG_C, PEC_CTPY_PRNT_CATG_C, PEC_CTPY_SUBAC_CATG_C, PEC_TRDG_AC_CATG_C, PEC_DSK_CATG_C, PEC_T_GESC_RGN_C, PEC_SEC_GESC_RGN_C, PEC_CTPY_GESC_RGN_C, PEC_IS_FEED_GESC_I, PEC_NATV_RPT_CUR_C ,
			PEC_ROW_IS_DELD_I
			from PEC_SRC_SYS 
			where  PEC_ROW_IS_DELD_I = 'N' and
			 PEC_SRC_SYS_ID_C = '${srcSysId$PEC_PARM_VAL2_C}' ]]></PARAM>
			<PARAM NAME="resource" VALUE="DSGPECS4"/>
			<PARAM NAME="fetch.size" VALUE="1"/>
			<PARAM NAME="result.wrap" VALUE="disconnected"/>
			<PARAM NAME="cache.type" VALUE="incremental"/>			
		</DATA-PROVIDER>		

		<DATA-PROVIDER NAME="pecsTrdAc" TYPE="DB">
			<PARAM NAME="query"><![CDATA[select PEC_TRDG_AC_N, PEC_LGL_ENTY_C, PEC_PCS_CSH_EDCU_I, PEC_TRDG_AC_TYP_ID_C, PEC_TRDG_DSK_C, PEC_PROD_LNE_C, PEC_TRDG_AC_CATG_C, PEC_TRDG_AC_ID_C,
			PEC_ROW_IS_DELD_I 
			from PEC_TRDG_AC 
			where PEC_ROW_IS_DELD_I = 'N' and
			 PEC_TRDG_AC_CATG_C = '${trdAcCatg$PEC_TRDG_AC_CATG_C}' and PEC_TRDG_AC_ID_C = '${driver$Book}' ]]></PARAM>
			<PARAM NAME="resource" VALUE="DSGPECS4"/>
			<PARAM NAME="fetch.size" VALUE="1"/>
			<PARAM NAME="result.wrap" VALUE="disconnected"/>
			<PARAM NAME="cache.type" VALUE="incremental"/>
		</DATA-PROVIDER>

		<DATA-PROVIDER NAME="overrideTrader" TYPE="DB">
			<PARAM NAME="query"><![CDATA[select PEC_PARM_VAL3_C,PEC_PARM_VAL1_C, PEC_PARM_VAL2_C,
			PEC_PARM_ID_C, PEC_ROW_IS_DELD_I
			from PEC_PARM 
			where PEC_PARM_ID_C = 'OvrdTrdr'  and PEC_ROW_IS_DELD_I = 'N' and
			 PEC_PARM_VAL1_C = '${trdAcCatg$PEC_TRDG_AC_CATG_C}' and PEC_PARM_VAL2_C = '${trdAc$PEC_TRDG_AC_N}' ]]></PARAM>
			<PARAM NAME="resource" VALUE="DSGPECS4"/>
			<PARAM NAME="fetch.size" VALUE="1"/>
			<PARAM NAME="result.wrap" VALUE="disconnected"/>
			<PARAM NAME="cache.type" VALUE="incremental"/>
		</DATA-PROVIDER>				

		<DATA-PROVIDER NAME="overrideTradeAc" TYPE="DB">
			<PARAM NAME="query"><![CDATA[select PEC_PARM_VAL6_C, PEC_PARM_VAL1_C, PEC_PARM_VAL2_C,PEC_PARM_VAL3_C,
			PEC_PARM_ID_C, PEC_ROW_IS_DELD_I
			from PEC_PARM 
			where PEC_PARM_ID_C = 'OvrdTrdgAc'
			and PEC_ROW_IS_DELD_I = 'N' 
			and PEC_PARM_VAL1_C = '${trdAcCatg$PEC_TRDG_AC_CATG_C}'
			and PEC_PARM_VAL2_C = '${trdAc$PEC_TRDG_AC_N}'
			and PEC_PARM_VAL3_C = 
				   (CASE 
					WHEN LENGTH(trim(${driver$BusLine})) < 4 THEN 'N'
					WHEN SUBSTR(trim(${driver$BusLine}),3,2) = 'DR' THEN 'Y'    
					ELSE 'N'
				    END)]]></PARAM>
			<PARAM NAME="resource" VALUE="DSGPECS4"/>
			<PARAM NAME="fetch.size" VALUE="1"/>
			<PARAM NAME="result.wrap" VALUE="disconnected"/>
			<PARAM NAME="cache.type" VALUE="incremental"/>
		</DATA-PROVIDER>				

		<DATA-PROVIDER NAME="ovrdTrdgAc" TYPE="DB">
			<PARAM NAME="query"><![CDATA[select PEC_PARM_VAL6_C,
			PEC_PARM_ID_C, PEC_PARM_VAL1_C, PEC_PARM_VAL2_C, PEC_PARM_VAL3_C, PEC_PARM_VAL4_C, PEC_PARM_VAL5_C, PEC_ROW_IS_DELD_I
			from	PEC_PARM
			where	PEC_PARM_ID_C 	= 'OvrdTrdgAc'
			and	PEC_PARM_VAL1_C = ${trdAcCatg$PEC_TRDG_AC_CATG_C}
			and	PEC_PARM_VAL2_C = ${trdgAc}
			and	nvl(PEC_PARM_VAL3_C, ${isAdr}) = ${isAdr}
			and	nvl(PEC_PARM_VAL4_C, ${isNewIssue}) = ${isNewIssue}
			and	PEC_ROW_IS_DELD_I = 'N'
			and	((trim(nvl('${driver$SlsrID}','')) is null and nvl(PEC_PARM_VAL5_C,'') is null) or
				(trim(nvl('${driver$SlsrID}','')) is not null and nvl(PEC_PARM_VAL5_C, '${driver$SlsrID}') = '${driver$SlsrID}'))]]></PARAM>
			<PARAM NAME="resource" VALUE="DSGPECS4"/>
			<PARAM NAME="fetch.size" VALUE="1"/>
			<PARAM NAME="result.wrap" VALUE="disconnected"/>
			<PARAM NAME="cache.type" VALUE="incremental"/>
		</DATA-PROVIDER>		

		<DATA-PROVIDER NAME="OrigTrdNo" TYPE="DB">
			<PARAM NAME="query"><![CDATA[select PEC_TRD_NBR_Q, PEC_SRC_SYS_TRD_NBR_Q, PEC_SRC_SYS_ID_C 
			from  PEC_TRADE
			where PEC_SRC_SYS_TRD_NBR_Q = ${driver$gsc_orig_id_c} and  PEC_SRC_SYS_ID_C = ${srcSysId$PEC_PARM_VAL2_C} and  PEC_ROW_IS_DELD_I = 'N']]></PARAM>
			<PARAM NAME="resource" VALUE="DSGPECS4"/>
			<PARAM NAME="fetch.size" VALUE="1"/>
			<PARAM NAME="result.wrap" VALUE="disconnected"/>
		</DATA-PROVIDER>
		
		<DATA-PROVIDER NAME="columnSize" TYPE="DB">
			<PARAM NAME="query"><![CDATA[SELECT COLUMN_NAME, DATA_LENGTH, PEC_PARM_ID_C, PEC_PARM_VAL1_C
			FROM all_tab_columns a, pec_parm p 
			WHERE TABLE_NAME = 'PEC_TRADE' AND p.PEC_PARM_ID_C = 'DbOwner' AND a.OWNER = p.PEC_PARM_VAL1_C]]></PARAM>
			<PARAM NAME="resource" VALUE="DSGPECS4"/>
			<PARAM NAME="fetch.size" VALUE="0"/>
			<PARAM NAME="result.wrap" VALUE="disconnected"/>
			<PARAM NAME="cache.type" VALUE="begin.app"/>
		</DATA-PROVIDER>

		<DATA-PROVIDER NAME="gescProcessingDate" TYPE="DB">
			<PARAM NAME="query"><![CDATA[select 
			to_char(PEC_STAT_D,'YYYYMMDD') PEC_STAT_D, PEC_STAT_ID_C, PEC_ROW_IS_DELD_I  
			from PEC_STATUS
			where  PEC_STAT_ID_C = 'ONLINE'	and  PEC_ROW_IS_DELD_I = 'N']]></PARAM>
			<PARAM NAME="resource" VALUE="DSGPECS4"/>
			<PARAM NAME="fetch.size" VALUE="1"/>
			<PARAM NAME="result.wrap" VALUE="disconnected"/>
			<PARAM NAME="cache.type" VALUE="begin.app"/>
		</DATA-PROVIDER>

		<DATA-PROVIDER NAME="GetLogLevel" TYPE="DB">
			<PARAM NAME="query"><![CDATA[SELECT LOG_LEVEL
			from
			(
			SELECT PEC_PARM_VAL2_C feed_level, PEC_PARM_VAL3_C LOG_LEVEL,
			decode(PEC_PARM_VAL2_C, 'GescPostLoad-YTD-POETM-08', 1, 
				'GescPostLoad-YTD-POETM', 2, 
				'GescPostLoad-YTD', 3, 
				999) log_priority
			from PEC_PARM
			where PEC_PARM_ID_C = 'LogLevel' and PEC_PARM_VAL1_C = 'PostLoadTransformer' and PEC_ROW_IS_DELD_I = 'N'
			and PEC_PARM_VAL2_C  in ('GescPostLoad-YTD', 'GescPostLoad-YTD-POETM', 'GescPostLoad-YTD-POETM-08')
			order by log_priority asc
			) where rownum < 2]]></PARAM>
			<PARAM NAME="resource" VALUE="DSGPECS4"/>
			<PARAM NAME="fetch.size" VALUE="0"/>
			<PARAM NAME="result.wrap" VALUE="disconnected"/>
			<PARAM NAME="cache.type" VALUE="begin.app"/>
			<PARAM NAME="cache.refresh.time" VALUE="600000"/>
		</DATA-PROVIDER>
		
		<DATA-PROVIDER NAME="GetRecordPattern" TYPE="DB">
			<PARAM NAME="query"><![CDATA[SELECT PEC_PARM_VAL2_C FEED_LEVEL, PEC_PARM_VAL3_C PATTERN, 
  		        decode(PEC_PARM_VAL2_C, 'GescPostLoad-YTD-POETM-08', 1, 
				    'GescPostLoad-YTD-POETM', 2, 
				    'GescPostLoad-YTD', 3, 
				    999) pattern_priority
			from PEC_PARM
			where PEC_PARM_ID_C = 'RecordPattern' and PEC_PARM_VAL1_C = 'PostLoadTransformer' and PEC_ROW_IS_DELD_I = 'N'
			and PEC_PARM_VAL2_C  in ('GescPostLoad-YTD', 'GescPostLoad-YTD-POETM', 'GescPostLoad-YTD-POETM-08')
			order by pattern_priority asc]]></PARAM>
			<PARAM NAME="resource" VALUE="DSGPECS4"/>
			<PARAM NAME="fetch.size" VALUE="0"/>
			<PARAM NAME="result.wrap" VALUE="disconnected"/>
			<PARAM NAME="cache.type" VALUE="begin.app"/>
		</DATA-PROVIDER>
		
	</DATA-PROVIDERS>
	
	<DATA-LOOKUP LOAD-TYPE="auto">				
		<LOOKUP NAME="processId"	DATA-PROVIDER="processID">
		</LOOKUP>

		<LOOKUP NAME="gescPrcsgDate"	DATA-PROVIDER="gescProcessingDate">
		</LOOKUP>	        

	        <LOOKUP NAME="getLogLevel"  	DATA-PROVIDER="GetLogLevel">
 	        </LOOKUP>

		<LOOKUP NAME="dataLength"	DATA-PROVIDER="columnSize">
		</LOOKUP>

		<LOOKUP NAME="filelkp"	DATA-PROVIDER="fileDP">
			<FILTER>col5=${driver$TradeID}</FILTER>
			<COLUMNS>col1,col2</COLUMNS>
		</LOOKUP>


		<LOOKUP NAME="srcSysId"  	DATA-PROVIDER="pecsSrcSysId">
		</LOOKUP>
		
		<LOOKUP NAME="existTrdNo"  	DATA-PROVIDER="pecsExistingTradeNo" 	DEPENDS="srcSysId">
		</LOOKUP>
		
		<!--Do not place newTrdNo lookup before existTrdNo -->
		
		<LOOKUP NAME="newTrdNo"  	DATA-PROVIDER="pecsNewTradeNo">
		</LOOKUP>

		<LOOKUP NAME="trdAcCatg"  	DATA-PROVIDER="pecsTrdAcCatg" 		DEPENDS="srcSysId">
		</LOOKUP>
		
		<LOOKUP NAME="trdAc"  		DATA-PROVIDER="pecsTrdAc" 		DEPENDS="trdAcCatg">
		</LOOKUP>		

		<LOOKUP NAME="ovrdTrader"  	DATA-PROVIDER="overrideTrader" 		DEPENDS="trdAc">	
		</LOOKUP>		
				
	        <LOOKUP NAME="trdOverrideTradeAc"  DATA-PROVIDER="overrideTradeAc" 	DEPENDS="trdAc">
 	        </LOOKUP>				
	     
		<LOOKUP NAME="pecSrcSys"  	DATA-PROVIDER="pecsSrcSys" 		DEPENDS="srcSysId">	
		</LOOKUP>		

	        <LOOKUP NAME="secInfo"  	DATA-PROVIDER="pecSecInfo"		DEPENDS="pecSrcSys">
 	        </LOOKUP>

	        <LOOKUP NAME="origTrdNo"  	DATA-PROVIDER="OrigTrdNo" 		DEPENDS="srcSysId">
 	        </LOOKUP>

	</DATA-LOOKUP>
	
	<EXCEPTION-HANDLER>
		<HANDLER CLASS="com.cs.sg.spear.core.exception.SpearExceptionHandler" NAME="default.exception.handler"/>
		
		<HANDLE EXCEPTION="com.cs.sg.spear.core.exception.ValidatorException" HANDLER="default.exception.handler">
			<ERROR CODE="ERROR_THRESHOLD_EXCEEDED"  VALUE="*" TYPE="fatal"/>
		</HANDLE>

		<HANDLE EXCEPTION="java.sql.SQLException" HANDLER="default.exception.handler">
			<ERROR CODE="SQL_EXCEPTION"  VALUE="*" TYPE="fatal"/>
		</HANDLE>
		
		<HANDLE EXCEPTION="com.cs.sg.spear.core.exception.SpearRuntimeException" HANDLER="default.exception.handler">
			<ERROR CODE="LOOKUP_NOT_FOUND"  VALUE="*" TYPE="fatal"/>
		</HANDLE>		
	</EXCEPTION-HANDLER>
	
</SPEAR-CONFIG>
